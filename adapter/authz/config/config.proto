// Copyright 2017 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package adapter.authz.config;

import "gogoproto/gogo.proto";

option go_package="config";
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.equal_all) = false;
option (gogoproto.gostring_all) = false;

message Params {
  // "AccessControlType" can be "namespace", "service", "method".
  enum AccessControlType {
    UNKNOWN = 0;
    NAMESPACE = 1;
    SERVICE = 2;
    METHOD = 3;
  }

  AccessControlType kind = 1;

  // "namespace" defines the namespace the authz policy applies to.
  // It is used only if "kind" is either "service" or "method".
  string namespace = 2;

  // "service_name" defines the service the authz policy applies to.
  // It is used only if "kind" is "method".
  string service_name = 3;

  message Mapping {
    // The resources can be "namespaces", "services", or "paths", depending on
    // "kind".
    repeated string resources = 1;
    repeated string verbs = 2;
    string permission = 3;
  }

  message Member {
    string kind = 1;
    string name = 2;
  }

  message Policy {
    repeated string permissions = 1;
    repeated Member members = 2;
  }

  repeated Mapping mappings = 4;

  repeated Policy policies = 5;
}


